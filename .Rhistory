# 1.c. What percentage of patients take between 1 and 5 days to recover?
pnorm(5, mean=10, sd=2) - pnorm(1, mean=10, sd=2)
pnorm(5, mean=10, sd=2, lower.tail = TRUE)-pnorm(1, mean=10, sd=2, lower.tail = TRUE)
# 1.d. How many days does it take for the 20th percentile of the distribution to recover?
qnorm(0.20, mean=10, sd=2,)
par(mfrow=c(2,2))
lm.output <- lm(actual_robbery_total~actual_murder, ucr_data)
summary(lm.output)
par(mfrow=c(2,2))
plot(lm.output)
library(ggplot2)
library(tidyverse)
(12-10)/2
pnorm(12, mean=10, sd=2, lower.tail = FALSE)
pnorm(5, mean=10, sd=2, lower.tail = TRUE)-pnorm(1, mean=10, sd=2, lower.tail = TRUE)
# 1.d. How many days does it take for the 20th percentile of the distribution to recover?
qnorm(0.2, mean=10, sd=2)
# 2.b. Load the data.
dat <- read.csv("data/ucr2017_big_cities.csv")
names(dat)
# Draw a scatterplot of actual_robbery_total vs actual_murder. What does the relationship look like?
dat %>% ggplot(aes(x=actual_murder, y=actual_robbery_total)) + geom_point()
# Fit a simple linear regression where you regress actual_robbery_total onto actual_murder.
out <- lm(actual_robbery_total ~ actual_murder, data=dat)
par(mfrow=c(2,2))
plot(out)
par(mfrow=c(1,1))
dat[3,]
dat[7,]
lm.output <- lm(actual_robbery_total ~ actual_murder, ucr_data)
summary(lm.output)
par(mfrow=c(2,2))
plot(lm.output)
(12-10)/2
# 1.b. What percentage of patients take 20 days or longer to recover?
pnorm(20, mean=10, sd=2, lower.tail=FALSE) #to the right
# 1.c. What percentage of patients take between 1 and 5 days to recover?
pnorm(5, mean=10, sd=2) - pnorm(1, mean=10, sd=2)
# 1.d. How many days does it take for the 20th percentile of the distribution to recover?
qnorm(0.20, mean=10, sd=2,)
# 2.b. Load the data.
library(tidyverse)
library(ggplot2)
ucr_data <- read.csv("/Users/nancy/Documents/GitHub/crim1200-stat/ucr2017_big_cities.csv")
view(ucr_data)
ggplot(ucr_data, aes(x=actual_robbery_total, y=actual_murder)) + geom_point() # the relationship looks curved and fanning out
lm.output <- lm(actual_robbery_total ~ actual_murder, ucr_data)
summary(lm.output)
par(mfrow=c(2,2))
plot(lm.output)
# 2.f. Look at the regression plot on the scatterplot.
ucr_data %>% ggplot(aes(x=actual_murder, y=actual_robbery_total)) + geom_point() + geom_smooth(method='lm', formula= y~x, se=FALSE)
summary(ucr_data)
summary(out)
summary(out)
summary(ucr_data)
summary(lm.output)
library(tidyverse)
library(ggplot2)
#Q1
(732 - 527) / 112
#Q4
pnorm(732, mean=527, sd=112, lower.tail = TRUE) - pnorm(700, mean=527, sd=112, lower.tail = TRUE)
pnorm(0.03, lower.tail=FALSE)
pnorm(0.03, mean= 527, sd=112lower.tail=FALSE)
pnorm(0.03, mean= 527, sd=112, lower.tail=FALSE)
pnorm(0.03, lower.tail=FALSE)
1-0.03
pnorm(0.03)
pnorm(0.027)
pnorm(0.03, lower.tail=FALSE)
pnorm(0.03, lower.tail=FALSE)
#Q2
qnorm(0.99, mean=527, sd=112)
#Q4
pnorm(732, mean=527, sd=112, lower.tail = TRUE) - pnorm(700, mean=527, sd=112, lower.tail = TRUE)
#Q5
drug_data <-read.csv("/Users/nancy/Documents/GitHub/crim1200-stat/dat.nsduh.small.1.1.csv")
view(drug_data)
#Q4
pnorm(732, mean=527, sd=112, lower.tail = TRUE) - pnorm(700, mean=527, sd=112, lower.tail = TRUE)
view(drug_data)
plot(drug_data$mjage, drug_data$ciage)
pnorm(0.03, lower.tail=FALSE)
#Q4
pnorm(732, mean=527, sd=112, lower.tail = TRUE) - pnorm(700, mean=527, sd=112, lower.tail = TRUE)
# 1.d. How many days does it take for the 20th percentile of the distribution to recover?
qnorm(0.20, mean=10, sd=2,)
# 1.d. How many days does it take for the 20th percentile of the distribution to recover?
qnorm(0.2, mean=10, sd=2)
# 1.c. What percentage of patients take between 1 and 5 days to recover?
pnorm(5, mean=10, sd=2) - pnorm(1, mean=10, sd=2)
pnorm(5, mean=10, sd=2, lower.tail = TRUE)-pnorm(1, mean=10, sd=2, lower.tail = TRUE)
#Q4
pnorm(732, mean=527, sd=112, lower.tail = TRUE) - pnorm(700, mean=527, sd=112, lower.tail = TRUE)
plot(drug_data$mjage, drug_data$ciage)
plot(drug_data$mjage, drug_data$ciage)
par(mfrow=c(1,1))
plot(drug_data$mjage, drug_data$ciage)
